using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ArrayAssign
{
    class Program
    {
        static void Main(string[] args)
        {
            Employee[] e= new Employee[5];
            for(int i=0; i<e.Length; i++)
            {
                string name = Console.ReadLine();
                decimal basic = Convert.ToDecimal(Console.ReadLine());
                short deptNo = short.Parse(Console.ReadLine());
                Employee e1 = new Employee(name, basic, deptNo);
                e[i] = e1;
            }

            Console.WriteLine("Enter EmpId you want");
            int empId = Convert.ToInt32(Console.ReadLine());
            for(int i=0; i<e.Length; i++)
            {
                if (empId == e[i].EmpNo)
                {
                    Console.WriteLine(e[i]);
                    e[i].Display();
                }
            }

            Console.ReadLine();
        }
    }

    class Employee
    {
        //Properties
        // ----------
        //string Name -> no blank names should be allowed
        // int EmpNo -> must be readonly and autogenerated
        // decimal Basic -> must be between some range
        // short DeptNo -> must be > 0
        private string name;
        public string Name
        {
            get
            {
                return name;
            }
            set
            {
                if (value != "")
                {
                    name = value;
                }
                else
                    Console.WriteLine("invalid name");
            }
        }


        private static int count = 0;
        private int empNo;

        public int EmpNo
        {
            get
            {

                return empNo;
            }
        }

        private decimal basic;
        public decimal Basic
        {
            get
            {
                return basic;
            }
            set
            {
                if (value > 1000.0m || value < 50000.0m)
                    basic = value;
                else
                    Console.WriteLine("invalid");
            }
        }

        private short deptNo;
        public short DeptNo
        {
            get
            {
                return deptNo;
            }
            set
            {
                if (value > 0)
                    deptNo = value;
                else
                    Console.WriteLine("invalid");
            }
        }

        public decimal GetNetSalary()
        {
            return basic * 12.0m;
        }
        public Employee(string Name, decimal Basic, short DeptNo)
        {

            count++;
            this.empNo = count;
            this.Name = Name;
            this.Basic = Basic;
            this.DeptNo = DeptNo;
        }

        public void Display()
        {
            Console.WriteLine(Name+" "+Basic+" "+DeptNo);
        }
       
       
        
    }


}
